# buildspec-plan.yml

version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9 # Or another suitable runtime if needed for helper scripts
    commands:
      - echo "Installing Terraform..."
      # Install Terraform from HashiCorp's repo (recommended for Linux)
      - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
      - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
      - sudo apt update && sudo apt install -y terraform
      - terraform version
      - echo "Installing AWS CLI v2..."
      # Install AWS CLI v2 using the bundled installer
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - sudo ./aws/install
      - aws --version

  pre_build:
    commands:
      - echo "Running terraform fmt -check..."
      # Ensure code is formatted correctly before planning
      - terraform fmt -check
      - echo "Initializing Terraform backend..."
      # terraform init will automatically pick up AWS credentials from CodeBuild's IAM role
      - terraform init

  build:
    commands:
      - echo "Generating Terraform plan..."
      # Generate the plan and save it to a file
      # -compact-warnings makes the output cleaner
      # -no-color removes ANSI escape codes, good for logs
      - terraform plan -out=tfplan -compact-warnings -no-color > plan_output.txt
      - echo "Terraform plan output:"
      - cat plan_output.txt # Display the plan in CodeBuild logs

  post_build:
    commands:
      - echo "Terraform plan stage complete."

artifacts:
  files:
    - tfplan             # Save the binary plan file for the apply stage
    - plan_output.txt    # Save the human-readable plan output for review
  discard-paths: no      # Keep the directory structure
